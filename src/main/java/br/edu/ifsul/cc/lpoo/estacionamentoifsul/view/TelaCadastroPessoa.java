/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package br.edu.ifsul.cc.lpoo.estacionamentoifsul.view;

import br.edu.ifsul.cc.lpoo.estacionamentoifsul.lpoo_sistemaestacionamentoifsul.dao.PersistenciaJPA;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.persistence.TypedQuery;
import javax.swing.JComboBox;
import javax.swing.JLabel;

import model.Pessoa;
import model.VinculoPessoa;

public class TelaCadastroPessoa extends javax.swing.JDialog {

    private Pessoa pessoa;
    PersistenciaJPA jpa;

    /**
     * Creates new form TelaCadastroPessoa
     */
    public TelaCadastroPessoa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jpa = new PersistenciaJPA();
    }

    public TelaCadastroPessoa(java.awt.Frame parent, boolean modal, Pessoa pessoa) {
        super(parent, modal);
        initComponents();
        jpa = new PersistenciaJPA(); // Inicializa jpa
        this.pessoa = pessoa; // Recebe o objeto Pessoa
        carregarDadosPessoa(); // Preenche os campos com os dados da pessoa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitulo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblFone = new javax.swing.JLabel();
        txtFone = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbVinculo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cbVinculo.setModel(new javax.swing.DefaultComboBoxModel<>(VinculoPessoa.values()));

        lblTitulo.setText("Cadastro de Pessoa:");

        lblNome.setText("Nome:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        lblFone.setText("Fone:");

        lblEmail.setText("E-mail:");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel1.setText("Vinculo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
getContentPane().setLayout(layout);

// Configuração do layout horizontal
layout.setHorizontalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(lblFone)
                            .addComponent(lblEmail)
                            .addComponent(jLabel1)) // Adicionado lblVinculo
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail)
                            .addComponent(txtNome)
                            .addComponent(txtFone)
                            .addComponent(cbVinculo, 0, 232, Short.MAX_VALUE)))) // Adicionado cbVinculo
                .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
);

// Configuração do layout vertical
layout.setVerticalGroup(
    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lblTitulo)
        .addGap(52, 52, 52)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lblNome)
            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lblFone)
            .addComponent(txtFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(lblEmail)
            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabel1) // Label do vinculo
            .addComponent(cbVinculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)) // JComboBox do vinculo
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(btnSalvar)
            .addComponent(btnCancelar))
        .addGap(47, 47, 47))
);

pack();

    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed


    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {
        if (pessoa == null) {
            pessoa = new Pessoa();
        }
    
        // Coletar dados dos campos
        pessoa.setNome(txtNome.getText());
        pessoa.setFone(txtFone.getText());
        pessoa.setEmail(txtEmail.getText());
        pessoa.setVinculoPessoa((VinculoPessoa) cbVinculo.getSelectedItem());
    
        if (jpa == null) {
            jpa = new PersistenciaJPA(); // Inicializa jpa caso não tenha sido inicializada
        }
    
        if (!jpa.conexaoAberta()) {
            throw new IllegalStateException("Erro ao abrir a conexão com o banco de dados.");
        }
    
        try {
            if (pessoa.getId() == 0) {
                // Criar novo registro
                int maxId = jpa.buscarMaxIdPessoa();
                pessoa.setId(maxId + 1); // Define o próximo ID
                jpa.persist(pessoa); // Persistir novo objeto
            } else {
                // Atualizar registro existente
                Pessoa pessoaExistente = (Pessoa) jpa.find(Pessoa.class, pessoa.getId());
                if (pessoaExistente != null) {
                    pessoaExistente.setNome(pessoa.getNome());
                    pessoaExistente.setFone(pessoa.getFone());
                    pessoaExistente.setEmail(pessoa.getEmail());
                    pessoaExistente.setVinculoPessoa(pessoa.getVinculoPessoa());
                    jpa.persist(pessoaExistente); // Atualiza o registro existente
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaCadastroPessoa.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            jpa.fecharConexao();
        }
        dispose();
    }
    

    private boolean idExiste(int id) {
    try {
        // Busca se existe uma pessoa com o ID fornecido
        TypedQuery<Pessoa> query = jpa.getEntityManager().createQuery(
            "SELECT p FROM Pessoa p WHERE p.id = :id", Pessoa.class);
        query.setParameter("id", id);
        return !query.getResultList().isEmpty();  // Retorna true se o ID já existir
    } catch (Exception e) {
        e.printStackTrace();
        return false; // Caso ocorra erro, assume que o ID não existe
    }
}

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaCadastroPessoa dialog = new TelaCadastroPessoa(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFone;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFone;
    private javax.swing.JTextField txtNome;
    private javax.swing.JComboBox<VinculoPessoa> cbVinculo; // Nova ComboBox
    // End of variables declaration//GEN-END:variables

    private void carregarDadosPessoa() {
        if (pessoa != null) { // Certifica-se de que o objeto Pessoa não é nulo
            txtNome.setText(pessoa.getNome()); // Preenche o campo de nome
            txtFone.setText(pessoa.getFone()); // Preenche o campo de telefone
            txtEmail.setText(pessoa.getEmail()); // Preenche o campo de e-mail
            
            // Define o valor selecionado no combo box de vínculo
            cbVinculo.setSelectedItem(pessoa.getVinculoPessoa() != null 
                ? pessoa.getVinculoPessoa().name() // Usa o valor de Enum, caso exista
                : VinculoPessoa.ALUNO.name()); // Define um valor padrão se for nulo
        }
    }

    public Pessoa getPessoa() {
        return pessoa;
    }

    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }
}
